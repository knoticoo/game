{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentScreen: 'main-menu',\n  gameState: 'menu',\n  // 'menu', 'playing', 'paused', 'game-over'\n  playerName: '',\n  currentChapter: 1,\n  currentScene: 0,\n  gameStarted: false,\n  settings: {\n    musicVolume: 0.7,\n    soundVolume: 0.8,\n    autoAdvance: false,\n    textSpeed: 'normal'\n  },\n  achievements: [],\n  statistics: {\n    playTime: 0,\n    choicesMade: 0,\n    charactersMet: 0,\n    battlesWon: 0\n  }\n};\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setCurrentScreen: (state, action) => {\n      state.currentScreen = action.payload;\n    },\n    setGameState: (state, action) => {\n      state.gameState = action.payload;\n    },\n    setPlayerName: (state, action) => {\n      state.playerName = action.payload;\n    },\n    startNewGame: (state, action) => {\n      state.gameState = 'playing';\n      state.gameStarted = true;\n      state.currentChapter = 1;\n      state.currentScene = 0;\n      state.playerName = action.payload.playerName || 'Your Majesty';\n    },\n    advanceChapter: state => {\n      state.currentChapter += 1;\n      state.currentScene = 0;\n    },\n    advanceScene: state => {\n      state.currentScene += 1;\n    },\n    updateSettings: (state, action) => {\n      state.settings = {\n        ...state.settings,\n        ...action.payload\n      };\n    },\n    addAchievement: (state, action) => {\n      if (!state.achievements.includes(action.payload)) {\n        state.achievements.push(action.payload);\n      }\n    },\n    updateStatistics: (state, action) => {\n      state.statistics = {\n        ...state.statistics,\n        ...action.payload\n      };\n    },\n    resetGame: state => {\n      return {\n        ...initialState,\n        settings: state.settings\n      };\n    }\n  }\n});\nexport const {\n  setCurrentScreen,\n  setGameState,\n  setPlayerName,\n  startNewGame,\n  advanceChapter,\n  advanceScene,\n  updateSettings,\n  addAchievement,\n  updateStatistics,\n  resetGame\n} = gameSlice.actions;\nexport default gameSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentScreen","gameState","playerName","currentChapter","currentScene","gameStarted","settings","musicVolume","soundVolume","autoAdvance","textSpeed","achievements","statistics","playTime","choicesMade","charactersMet","battlesWon","gameSlice","name","reducers","setCurrentScreen","state","action","payload","setGameState","setPlayerName","startNewGame","advanceChapter","advanceScene","updateSettings","addAchievement","includes","push","updateStatistics","resetGame","actions","reducer"],"sources":["/workspace/src/store/slices/gameSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  currentScreen: 'main-menu',\n  gameState: 'menu', // 'menu', 'playing', 'paused', 'game-over'\n  playerName: '',\n  currentChapter: 1,\n  currentScene: 0,\n  gameStarted: false,\n  settings: {\n    musicVolume: 0.7,\n    soundVolume: 0.8,\n    autoAdvance: false,\n    textSpeed: 'normal',\n  },\n  achievements: [],\n  statistics: {\n    playTime: 0,\n    choicesMade: 0,\n    charactersMet: 0,\n    battlesWon: 0,\n  },\n};\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setCurrentScreen: (state, action) => {\n      state.currentScreen = action.payload;\n    },\n    setGameState: (state, action) => {\n      state.gameState = action.payload;\n    },\n    setPlayerName: (state, action) => {\n      state.playerName = action.payload;\n    },\n    startNewGame: (state, action) => {\n      state.gameState = 'playing';\n      state.gameStarted = true;\n      state.currentChapter = 1;\n      state.currentScene = 0;\n      state.playerName = action.payload.playerName || 'Your Majesty';\n    },\n    advanceChapter: (state) => {\n      state.currentChapter += 1;\n      state.currentScene = 0;\n    },\n    advanceScene: (state) => {\n      state.currentScene += 1;\n    },\n    updateSettings: (state, action) => {\n      state.settings = { ...state.settings, ...action.payload };\n    },\n    addAchievement: (state, action) => {\n      if (!state.achievements.includes(action.payload)) {\n        state.achievements.push(action.payload);\n      }\n    },\n    updateStatistics: (state, action) => {\n      state.statistics = { ...state.statistics, ...action.payload };\n    },\n    resetGame: (state) => {\n      return { ...initialState, settings: state.settings };\n    },\n  },\n});\n\nexport const {\n  setCurrentScreen,\n  setGameState,\n  setPlayerName,\n  startNewGame,\n  advanceChapter,\n  advanceScene,\n  updateSettings,\n  addAchievement,\n  updateStatistics,\n  resetGame,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}