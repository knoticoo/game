{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  companions: [],\n  currentCompanion: null,\n  relationships: {},\n  romanceLevels: {},\n  gifts: {\n    flowers: 5,\n    jewelry: 2,\n    books: 3,\n    weapons: 1\n  },\n  companionStats: {\n    totalRecruited: 0,\n    maxLevel: 1,\n    totalAffection: 0\n  }\n};\nconst characterSlice = createSlice({\n  name: 'character',\n  initialState,\n  reducers: {\n    addCompanion: (state, action) => {\n      const companion = action.payload;\n      const existingIndex = state.companions.findIndex(c => c.id === companion.id);\n      if (existingIndex === -1) {\n        state.companions.push({\n          ...companion,\n          level: 1,\n          experience: 0,\n          affection: 0,\n          recruited: true,\n          recruitedAt: Date.now()\n        });\n        state.relationships[companion.id] = 0;\n        state.romanceLevels[companion.id] = 0;\n        state.companionStats.totalRecruited += 1;\n      }\n    },\n    removeCompanion: (state, action) => {\n      const companionId = action.payload;\n      state.companions = state.companions.filter(c => c.id !== companionId);\n      delete state.relationships[companionId];\n      delete state.romanceLevels[companionId];\n    },\n    updateCompanionLevel: (state, action) => {\n      const {\n        companionId,\n        experience,\n        level\n      } = action.payload;\n      const companion = state.companions.find(c => c.id === companionId);\n      if (companion) {\n        companion.experience = experience;\n        companion.level = level;\n        state.companionStats.maxLevel = Math.max(state.companionStats.maxLevel, level);\n      }\n    },\n    updateRelationship: (state, action) => {\n      const {\n        companionId,\n        change\n      } = action.payload;\n      if (state.relationships[companionId] !== undefined) {\n        state.relationships[companionId] = Math.max(-100, Math.min(100, state.relationships[companionId] + change));\n      }\n    },\n    updateRomanceLevel: (state, action) => {\n      const {\n        companionId,\n        change\n      } = action.payload;\n      if (state.romanceLevels[companionId] !== undefined) {\n        state.romanceLevels[companionId] = Math.max(0, Math.min(100, state.romanceLevels[companionId] + change));\n      }\n    },\n    giveGift: (state, action) => {\n      const {\n        companionId,\n        giftType,\n        affectionGain\n      } = action.payload;\n      if (state.gifts[giftType] > 0) {\n        state.gifts[giftType] -= 1;\n        const companion = state.companions.find(c => c.id === companionId);\n        if (companion) {\n          companion.affection += affectionGain;\n          state.romanceLevels[companionId] = Math.max(0, Math.min(100, state.romanceLevels[companionId] + affectionGain));\n        }\n      }\n    },\n    addGift: (state, action) => {\n      const {\n        giftType,\n        amount\n      } = action.payload;\n      if (state.gifts[giftType] !== undefined) {\n        state.gifts[giftType] += amount;\n      }\n    },\n    setCurrentCompanion: (state, action) => {\n      state.currentCompanion = action.payload;\n    },\n    updateCompanionStats: (state, action) => {\n      state.companionStats = {\n        ...state.companionStats,\n        ...action.payload\n      };\n    },\n    resetCharacters: state => {\n      return initialState;\n    }\n  }\n});\nexport const {\n  addCompanion,\n  removeCompanion,\n  updateCompanionLevel,\n  updateRelationship,\n  updateRomanceLevel,\n  giveGift,\n  addGift,\n  setCurrentCompanion,\n  updateCompanionStats,\n  resetCharacters\n} = characterSlice.actions;\nexport default characterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","companions","currentCompanion","relationships","romanceLevels","gifts","flowers","jewelry","books","weapons","companionStats","totalRecruited","maxLevel","totalAffection","characterSlice","name","reducers","addCompanion","state","action","companion","payload","existingIndex","findIndex","c","id","push","level","experience","affection","recruited","recruitedAt","Date","now","removeCompanion","companionId","filter","updateCompanionLevel","find","Math","max","updateRelationship","change","undefined","min","updateRomanceLevel","giveGift","giftType","affectionGain","addGift","amount","setCurrentCompanion","updateCompanionStats","resetCharacters","actions","reducer"],"sources":["/workspace/src/store/slices/characterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  companions: [],\n  currentCompanion: null,\n  relationships: {},\n  romanceLevels: {},\n  gifts: {\n    flowers: 5,\n    jewelry: 2,\n    books: 3,\n    weapons: 1,\n  },\n  companionStats: {\n    totalRecruited: 0,\n    maxLevel: 1,\n    totalAffection: 0,\n  },\n};\n\nconst characterSlice = createSlice({\n  name: 'character',\n  initialState,\n  reducers: {\n    addCompanion: (state, action) => {\n      const companion = action.payload;\n      const existingIndex = state.companions.findIndex(c => c.id === companion.id);\n      \n      if (existingIndex === -1) {\n        state.companions.push({\n          ...companion,\n          level: 1,\n          experience: 0,\n          affection: 0,\n          recruited: true,\n          recruitedAt: Date.now(),\n        });\n        state.relationships[companion.id] = 0;\n        state.romanceLevels[companion.id] = 0;\n        state.companionStats.totalRecruited += 1;\n      }\n    },\n    removeCompanion: (state, action) => {\n      const companionId = action.payload;\n      state.companions = state.companions.filter(c => c.id !== companionId);\n      delete state.relationships[companionId];\n      delete state.romanceLevels[companionId];\n    },\n    updateCompanionLevel: (state, action) => {\n      const { companionId, experience, level } = action.payload;\n      const companion = state.companions.find(c => c.id === companionId);\n      if (companion) {\n        companion.experience = experience;\n        companion.level = level;\n        state.companionStats.maxLevel = Math.max(state.companionStats.maxLevel, level);\n      }\n    },\n    updateRelationship: (state, action) => {\n      const { companionId, change } = action.payload;\n      if (state.relationships[companionId] !== undefined) {\n        state.relationships[companionId] = Math.max(-100, \n          Math.min(100, state.relationships[companionId] + change));\n      }\n    },\n    updateRomanceLevel: (state, action) => {\n      const { companionId, change } = action.payload;\n      if (state.romanceLevels[companionId] !== undefined) {\n        state.romanceLevels[companionId] = Math.max(0, \n          Math.min(100, state.romanceLevels[companionId] + change));\n      }\n    },\n    giveGift: (state, action) => {\n      const { companionId, giftType, affectionGain } = action.payload;\n      if (state.gifts[giftType] > 0) {\n        state.gifts[giftType] -= 1;\n        const companion = state.companions.find(c => c.id === companionId);\n        if (companion) {\n          companion.affection += affectionGain;\n          state.romanceLevels[companionId] = Math.max(0, \n            Math.min(100, state.romanceLevels[companionId] + affectionGain));\n        }\n      }\n    },\n    addGift: (state, action) => {\n      const { giftType, amount } = action.payload;\n      if (state.gifts[giftType] !== undefined) {\n        state.gifts[giftType] += amount;\n      }\n    },\n    setCurrentCompanion: (state, action) => {\n      state.currentCompanion = action.payload;\n    },\n    updateCompanionStats: (state, action) => {\n      state.companionStats = { ...state.companionStats, ...action.payload };\n    },\n    resetCharacters: (state) => {\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  addCompanion,\n  removeCompanion,\n  updateCompanionLevel,\n  updateRelationship,\n  updateRomanceLevel,\n  giveGift,\n  addGift,\n  setCurrentCompanion,\n  updateCompanionStats,\n  resetCharacters,\n} = characterSlice.actions;\n\nexport default characterSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}